<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="Marimo.WindowsCalculator.WinUI3.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="using:Marimo.WindowsCalculator.WinUI3.Controls"
    xmlns:model="using:Marimo.WindowsCalculator.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:control1="using:Marimo.WindowsCalculator.WinUI3.Controls"
    mc:Ignorable="d"
    >
    <Grid 
        x:Name="Root"
        RequestedTheme="{Binding Settings.Theme, Mode=OneWay, Converter={StaticResource ThemesConverter}}"
        Background="{ThemeResource SystemControlAcrylicWindowBrush}"
        Loaded="RootLoaded">
        <Grid.Resources>
            <Storyboard x:Key="SlideInAnimation">
                <DoubleAnimation 
                    Storyboard.TargetName="OverlayPanel"
                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                     From="200" To="-100" Duration="0:0:0.3" />
                <DoubleAnimation Storyboard.TargetName="OverlayPanel"
                    Storyboard.TargetProperty="Opacity"
                    From="0" To="1" Duration="0:0:0.3" />
                <DoubleAnimation 
                    Storyboard.TargetName="ShadowOfMain"
                Storyboard.TargetProperty="Opacity"
                From="0" To="0.5" Duration="0:0:0.3" />
            </Storyboard>
            <Storyboard x:Key="SlideOutAnimation">
                <DoubleAnimation 
                    Storyboard.TargetName="OverlayPanel"
             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
             From="-100" To="200" Duration="0:0:0.3" />
                <DoubleAnimation 
                    Storyboard.TargetName="OverlayPanel"
             Storyboard.TargetProperty="Opacity"
             From="1" To="0" Duration="0:0:0.3" />
                <DoubleAnimation 
                    Storyboard.TargetName="ShadowOfMain"
            Storyboard.TargetProperty="Opacity"
            From="0.5" To="0" Duration="0:0:0.3" />
            </Storyboard>
        </Grid.Resources>
        <StackPanel 
            x:Name="AppTitleBar" 
            Background="{ThemeResource SystemControlAcrylicWindowBrush}" Height="32" VerticalAlignment="Top" Orientation="Horizontal">
            <ImageIcon Margin="16,0" Width="20" Height="20" Source="ms-appx:///Assets/Images/Calculator.svg"/>
            <TextBlock Margin="-4" Text="電卓" VerticalAlignment="Center" FontSize="12" />
        </StackPanel>
        <SplitView x:Name="SplitView" DisplayMode="CompactInline" CompactPaneLength="0" OpenPaneLength="200">
            <SplitView.Pane>
                <ScrollViewer MaxWidth="200">
                <StackPanel>
                    <TextBlock FontSize="24">設定</TextBlock>
                    <ComboBox Margin="8" Header="テーマ" ItemsSource="{x:Bind ViewModel.Themes}"
          SelectedItem="{x:Bind ViewModel.Settings.Theme, Mode=TwoWay}"/>
                    <TextBox Margin="8" Header="0ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.ZeroDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="バックスペースボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.BackspaceDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="Undoボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.UndoDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="1ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.OneDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="2ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.TwoDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="3ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.ThreeDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="4ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.FourDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="5ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.FiveDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="6ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.SixDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="7ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.SevenDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="8ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.EightDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="9ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.NineDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header=".(小数点)ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.DotDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="+ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.AddDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="-ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.SubstractDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="×ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.MultiplyDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="÷ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.DivideDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="=ボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.EqualDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox Margin="8" Header="Cボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.CDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Margin="8" Header="CEボタンを表すテキスト" Text="{x:Bind ViewModel.Settings.CEDisplayText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </ScrollViewer>
            </SplitView.Pane>
            <RelativePanel x:Name="Main" Tapped="MainClick">
                <RelativePanel
                    x:Name="Header"
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.LeftOf="HistoryPane"
                    Height="100"
                    Margin="12,48,12,0">
                    <Grid 
                        RelativePanel.AlignTopWithPanel="True" 
                        RelativePanel.AlignLeftWithPanel="True"
                        Background="Transparent"
                        Tapped="SettingsClick">
                        <SymbolIcon Symbol="Setting"/>
                    </Grid>
                    <Grid 
                        x:Name="HistoryIcon"
                RelativePanel.AlignTopWithPanel="True" 
                RelativePanel.AlignRightWithPanel="True"
                Background="Transparent"
                Tapped="HistoryClick">
                        <ImageIcon
                    Width="20" Height="20"
                    Source="ms-appx:///Assets/Images/History.svg"/>
                    </Grid>
                    <TextBlock
                RelativePanel.AlignBottomWithPanel="True" 
                RelativePanel.AlignRightWithPanel="True"
                FontSize="14"
                Text="{x:Bind ViewModel.Expression, Mode=OneWay}"/>
                </RelativePanel>
                <Grid
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.Below="Header"
                    RelativePanel.LeftOf="HistoryPane"
                    RelativePanel.AlignLeftWithPanel="True"
                    Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border 
                Grid.ColumnSpan="4" 
                Margin="-3,4"
                BorderThickness="2" CornerRadius="5" BorderBrush="#1a1a1a"
                HorizontalAlignment="Stretch">
                        <Viewbox 
                    HorizontalAlignment="Right"
                    MaxHeight="60">
                            <TextBlock 
                        Text="{x:Bind ViewModel.DisplayNumber, Mode=OneWay}"
                        FontWeight="SemiBold"/>
                        </Viewbox>
                    </Border>
                    <control:CalculatorButton
                        Grid.Row="1"         
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.CEDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputCECommand}"/>

                    <control:CalculatorButton
                        Grid.Row="1" Grid.Column="1"
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.CDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputCCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="1" Grid.Column="2"         
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.BackspaceDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputBackspaceCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="1" Grid.Column="3"         
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.DivideDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputDivideCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="2"
                        Text="{x:Bind ViewModel.Settings.SevenDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputSevenCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="2" Grid.Column="1"
                        Text="{x:Bind ViewModel.Settings.EightDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputEightCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="2" Grid.Column="2"
                        Text="{x:Bind ViewModel.Settings.NineDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputNineCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="2" Grid.Column="3"
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.MultiplyDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputMultiplyCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="3"
                        Text="{x:Bind ViewModel.Settings.FourDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputFourCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="3" Grid.Column="1"
                        Text="{x:Bind ViewModel.Settings.FiveDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputFiveCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="3" Grid.Column="2"
                        Text="{x:Bind ViewModel.Settings.SixDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputSixCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="3" Grid.Column="3"
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.SubstractDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputSubstractCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="4"
                        Text="{x:Bind ViewModel.Settings.OneDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputOneCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="4" Grid.Column="1"
                        Text="{x:Bind ViewModel.Settings.TwoDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputTwoCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="4" Grid.Column="2"
                        Text="{x:Bind ViewModel.Settings.ThreeDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputThreeCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="4" Grid.Column="3"
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.AddDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputAddCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="5"
                        Background="{ThemeResource SystemControlTransientBackgroundBrush}"
                        Text="{x:Bind ViewModel.Settings.UndoDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputUndoCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="5" Grid.Column="1"
                        Text="{x:Bind ViewModel.Settings.ZeroDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputZeroCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="5" Grid.Column="2"
                        Text="{x:Bind ViewModel.Settings.DotDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputDotCommand}"/>
                    <control:CalculatorButton
                        Grid.Row="5" Grid.Column="3"
                        Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}"
                        Text="{x:Bind ViewModel.Settings.EqualDisplayText, Mode=OneWay}"
                        Comand="{x:Bind ViewModel.InputEqualCommand}"/>
                </Grid>
                <Grid
                    x:Name="HistoryPane"
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    Width="0"
                    >
                    <TextBlock>履歴</TextBlock>
                </Grid>
            </RelativePanel>
        </SplitView>
        <Grid 
            x:Name="ShadowOfMain" Background="Black" 
            Opacity="0" IsHitTestVisible="false"/>
        <Border 
            x:Name="OverlayPanel" 
            Background="{ThemeResource LayerFillColorAltBrush}" Height="200" VerticalAlignment="Bottom" Opacity="0"
            RenderTransformOrigin="0.5,0.5">
            <Border.RenderTransform>
                <TranslateTransform Y="200"/>
            </Border.RenderTransform>
            <Border CornerRadius="10">
                <Grid Height="300">
                    <Viewbox>
                        <ScrollViewer>
                            <ListBox ItemsSource="{x:Bind ViewModel.History}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate x:DataType="model:CalculationHistoryItem">
                                        <RelativePanel>
                                            <TextBlock
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.AlignTopWithPanel="True"
                                                Text="{x:Bind Expression}"/>
                                            <TextBlock
                                                RelativePanel.AlignLeftWithPanel="True"
                                                RelativePanel.AlignTopWithPanel="True"
                                                Text="{x:Bind Result.Value}"/>
                                        </RelativePanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </Viewbox>
                </Grid>
            </Border>
        </Border>
    </Grid>
</Window>