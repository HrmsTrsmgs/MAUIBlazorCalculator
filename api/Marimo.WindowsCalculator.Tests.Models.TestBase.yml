### YamlMime:ManagedReference
items:
- uid: Marimo.WindowsCalculator.Tests.Models.TestBase
  commentId: T:Marimo.WindowsCalculator.Tests.Models.TestBase
  id: TestBase
  parent: Marimo.WindowsCalculator.Tests.Models
  children:
  - Marimo.WindowsCalculator.Tests.Models.TestBase.#ctor
  - Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender
  langs:
  - csharp
  - vb
  name: TestBase
  nameWithType: TestBase
  fullName: Marimo.WindowsCalculator.Tests.Models.TestBase
  type: Class
  source:
    remote:
      path: ModelsTests/TestBase.cs
      branch: main
      repo: https://github.com/HrmsTrsmgs/WindowsCalculator.git
    id: TestBase
    path: ModelsTests/TestBase.cs
    startLine: 8
  assemblies:
  - Marimo.WindowsCalculator.Tests.Models
  namespace: Marimo.WindowsCalculator.Tests.Models
  syntax:
    content: public class TestBase
    content.vb: Public Class TestBase
  inheritance:
  - System.Object
  derivedClasses:
  - Marimo.WindowsCalculator.Tests.Models.IncrementalParserTest
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender
  commentId: P:Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender
  id: MemoryAppender
  parent: Marimo.WindowsCalculator.Tests.Models.TestBase
  langs:
  - csharp
  - vb
  name: MemoryAppender
  nameWithType: TestBase.MemoryAppender
  fullName: Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender
  type: Property
  source:
    remote:
      path: ModelsTests/TestBase.cs
      branch: main
      repo: https://github.com/HrmsTrsmgs/WindowsCalculator.git
    id: MemoryAppender
    path: ModelsTests/TestBase.cs
    startLine: 10
  assemblies:
  - Marimo.WindowsCalculator.Tests.Models
  namespace: Marimo.WindowsCalculator.Tests.Models
  syntax:
    content: protected MemoryAppender MemoryAppender { get; set; }
    parameters: []
    return:
      type: log4net.Appender.MemoryAppender
    content.vb: Protected Property MemoryAppender As MemoryAppender
  overload: Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Marimo.WindowsCalculator.Tests.Models.TestBase.#ctor
  commentId: M:Marimo.WindowsCalculator.Tests.Models.TestBase.#ctor
  id: '#ctor'
  parent: Marimo.WindowsCalculator.Tests.Models.TestBase
  langs:
  - csharp
  - vb
  name: TestBase()
  nameWithType: TestBase.TestBase()
  fullName: Marimo.WindowsCalculator.Tests.Models.TestBase.TestBase()
  type: Constructor
  source:
    remote:
      path: ModelsTests/TestBase.cs
      branch: main
      repo: https://github.com/HrmsTrsmgs/WindowsCalculator.git
    id: .ctor
    path: ModelsTests/TestBase.cs
    startLine: 11
  assemblies:
  - Marimo.WindowsCalculator.Tests.Models
  namespace: Marimo.WindowsCalculator.Tests.Models
  syntax:
    content: public TestBase()
    content.vb: Public Sub New
  overload: Marimo.WindowsCalculator.Tests.Models.TestBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Marimo.WindowsCalculator.Tests.Models
  commentId: N:Marimo.WindowsCalculator.Tests.Models
  name: Marimo.WindowsCalculator.Tests.Models
  nameWithType: Marimo.WindowsCalculator.Tests.Models
  fullName: Marimo.WindowsCalculator.Tests.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender*
  commentId: Overload:Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender
  name: MemoryAppender
  nameWithType: TestBase.MemoryAppender
  fullName: Marimo.WindowsCalculator.Tests.Models.TestBase.MemoryAppender
- uid: log4net.Appender.MemoryAppender
  commentId: T:log4net.Appender.MemoryAppender
  parent: log4net.Appender
  isExternal: true
  name: MemoryAppender
  nameWithType: MemoryAppender
  fullName: log4net.Appender.MemoryAppender
- uid: log4net.Appender
  commentId: N:log4net.Appender
  isExternal: true
  name: log4net.Appender
  nameWithType: log4net.Appender
  fullName: log4net.Appender
- uid: Marimo.WindowsCalculator.Tests.Models.TestBase.#ctor*
  commentId: Overload:Marimo.WindowsCalculator.Tests.Models.TestBase.#ctor
  name: TestBase
  nameWithType: TestBase.TestBase
  fullName: Marimo.WindowsCalculator.Tests.Models.TestBase.TestBase
